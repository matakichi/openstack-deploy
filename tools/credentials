#!/bin/bash

endpoint="192.168.1.10"
os_token="admin"

username="admin"
password="admin"
tenant="admin"

env_vals=("OS_TOKEN" "OS_URL" "OS_AUTH_URL" "OS_SERVICE_TOKEN" "OS_USERNAME" "OS_PASSWORD" "OS_TENANT_NAME" "OS_SERVICE_ENDPOINT")

show_help() {
    echo "Positional arguments:"
    echo "  secret                       shared secret used for authentication"
    echo "                               carries no explicit authorization."
    echo "  tenant                       user\/password used for authentication."
    echo "Credentials options:"
    echo "  --token <admin-token>        'shared secret' to keystone."
    echo "  --tenant <auth-tenant-name>  tenant used for authentication."
    echo "  --user <auth-username>       name used for authentication."
    echo "  --pass <auth-password>       password used for authentication."
    echo "  --endpoint <auth-endpoint>   specify the identity service endpoint."
    echo "Other options:"
    echo "  --help                       display this help message."
}

init_env() {
    unset ${env_vals[@]}
}

set_secret() {
    init_env
    for arg in $*
    do
        case "$arg" in
            "--token")
                os_token=$2
                shift 2
                ;;
            *)
                if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-+ ]]; then
                    param+=( "$1" )
                    shift 1
                fi
                ;;
        esac
    done
    echo "loaded shared secret."
    export OS_TOKEN="$os_token"
    export OS_SERVICE_TOKEN="$os_token"
    export OS_URL="http://$endpoint:35357/v2.0"
    export OS_SERVICE_ENDPOINT="http://$endpoint:35357/v2.0"
}

set_auth() {
    init_env
    export OS_AUTH_URL="http://$endpoint:35357/v2.0"
    for arg in $*
    do
        case "$arg" in
            "--tenant")
                tenant=$2
                shift 2
                ;;
            "--user")
                username=$2
                shift 2
                ;;
            "--pass")
                password=$2
                shift 2
                ;;
            "--endpoint")
                endpoint=$2
                shift 2
                ;;
            *)
                if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-+ ]]; then
                    param+=( "$1" )
                    shift 1
                fi
                ;;
        esac
    done
    echo "loaded '$tenant' project."
    export OS_USERNAME="$username"
    export OS_PASSWORD="$password"
    export OS_TENANT_NAME="$tenant"
}

run_commands() {
    case "$1" in
        "--help") show_help;;
        "init") init_env;;
        "secret") set_secret $*;;
        "tenant") set_auth $*;;
        * ) echo "missing option name (use --help)"
    esac
}

if [ $# -lt 1 ]; then
    echo "$0 : missing command name (use --help)"
else
    option=$*
    run_commands $option
fi

