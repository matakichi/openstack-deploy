#!/bin/bash

endpoint="10.30.1.27"
os_token="admin"

admin_user="admin"
admin_password="admin"
admin_tenant="admin"

demo_user="admin"
demo_password="admin"
demo_tenant="demo"

m_admin="admin"
m_demo="demo"
m_key="keystone"

env_vals=("OS_TOKEN" "OS_URL" "OS_AUTH_URL" "OS_SERVICE_TOKEN" "OS_USERNAME" "OS_PASSWORD" "OS_TENANT_NAME" "OS_SERVICE_ENDPOINT")

show_help() {
    echo "$0 [option]"
    echo "Credentials options:"
    echo "  admin                   authenticate keystone with admin user."
    echo "  keystone                authenticate keystone with admin token."
    echo "Other options:"
    echo "  --help                  display this help message."
}

init_env() {
    unset ${env_vals[@]}
}

set_keystone() {
    init_env
    echo "loaded admin token."
    export OS_TOKEN="$os_token"
    export OS_SERVICE_TOKEN="$os_token"
    export OS_URL="http://$endpoint:35357/v2.0"
    export OS_SERVICE_ENDPOINT="http://$endpoint:35357/v2.0"
}

set_admin() {
    init_env
    echo "loaded admin project."
    export OS_AUTH_URL="http://$endpoint:35357/v2.0"
    export OS_USERNAME="$admin_user"
    export OS_PASSWORD="$admin_password"
    export OS_TENANT_NAME="$admin_tenant"
}

run_commands() {
    case "$1" in
        "--help") show_help;;
        "init") init_env;;
        "$m_key") set_keystone;;
        "$m_admin") set_admin;;
        "$m_demo")  set_demo;;
        * ) echo "missing option name (use --help)"
    esac
}

if [ $# -ne 1 ]; then
    echo "$0 : missing command name (use --help)"
else
    option=$1
    run_commands $option
fi
